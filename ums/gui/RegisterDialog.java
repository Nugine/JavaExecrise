package ums.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;

import ums.dao.UserDao;
import ums.entity.User;

public class RegisterDialog extends JDialog {
    /**
     * Generated by VSCode
     */
    private static final long serialVersionUID = -1574757400045232265L;

    private final UserDao userDao;

    private final JLabel labelEmail = new JLabel("Email");
    private final JTextField textFieldUserEmail = new JTextField(20);

    private final JLabel labelName = new JLabel("用户名");
    private final JTextField textFieldUserName = new JTextField(20);

    private final JLabel labelSex = new JLabel("性别：");
    private final JLabel labelMale = new JLabel("男");
    private final JLabel labelFemale = new JLabel("女");
    private final JRadioButton radioMale = new JRadioButton();
    private final JRadioButton radioFemale = new JRadioButton();

    private final JLabel labelHobby = new JLabel("爱好：");
    private final String[] strHobbies = { "体育运动", "上网", "看书", "打游戏" };
    private final JCheckBox checkBoxHobbies[] = new JCheckBox[4];
    private final JLabel labelHobbies[] = new JLabel[4];

    private final JButton buttonSave = new JButton("保存");
    private final JButton buttonModify = new JButton("修改");
    private final JButton buttonExit = new JButton("退出");

    private final int windowHeight = 280;
    private final int windowWidth = 400;

    private final JPanel panelEmail = new JPanel();
    private final JPanel panelName = new JPanel();
    private final JPanel panelSex = new JPanel();
    private final JPanel panelHobby = new JPanel();
    private final JPanel panelButtons = new JPanel();
    private final JPanel panel = new JPanel();

    private final JFrame parent;

    public RegisterDialog(final JFrame parent, final String msg, final UserDao userDao) {
        super(parent, msg, true);
        this.parent = parent;
        this.userDao = userDao;

        panelEmail.add(labelEmail);
        panelEmail.add(textFieldUserEmail);

        panelName.add(labelName);
        panelName.add(textFieldUserName);

        final ButtonGroup sexRadioGroup = new ButtonGroup();
        sexRadioGroup.add(radioMale);
        sexRadioGroup.add(radioFemale);
        panelSex.add(labelSex);
        panelSex.add(labelMale);
        panelSex.add(radioMale);
        panelSex.add(labelFemale);
        panelSex.add(radioFemale);
        radioMale.setSelected(true);

        panelHobby.add(labelHobby);
        for (int i = 0; i < checkBoxHobbies.length; ++i) {
            checkBoxHobbies[i] = new JCheckBox();
            labelHobbies[i] = new JLabel();
            labelHobbies[i].setText(strHobbies[i]);
            panelHobby.add(checkBoxHobbies[i]);
            panelHobby.add(labelHobbies[i]);
        }

        panelButtons.add(buttonSave);
        panelButtons.add(buttonExit);

        panel.add(panelEmail);
        panel.add(panelName);
        panel.add(panelSex);
        panel.add(panelHobby);
        panel.add(panelButtons);
        this.add(panel);

        buttonSave.addActionListener(new ButtonSaveHandler());
        buttonExit.addActionListener(new ButtonExitHandler());

        this.setPosition();
        this.validate();
    }

    private void setPosition() {
        final int parentX = parent.getX();
        final int parentY = parent.getY();
        final int parentWidth = parent.getWidth();
        final int parentHeight = parent.getHeight();
        final int dialogX = parentX + (parentWidth - windowWidth) / 2;
        final int dialogY = parentY + (parentHeight - windowHeight) / 2 + 40;
        this.setBounds(dialogX, dialogY, windowWidth, windowHeight);
    }

    private void resetForm() {
        textFieldUserEmail.setText("");
        textFieldUserName.setText("");
        radioMale.setSelected(true);

        for (int i = 0; i < checkBoxHobbies.length; i++) {
            checkBoxHobbies[i].setSelected(false);
        }
    }

    private ArrayList<String> getHobbiesInfo() {
        final ArrayList<String> list = new ArrayList<String>();

        for (int i = 0; i < checkBoxHobbies.length; i++) {
            if (checkBoxHobbies[i].isSelected()) {
                final String hobbyText = labelHobbies[i].getText();
                list.add(hobbyText);
            }
        }

        return list;
    }

    private class ButtonSaveHandler implements ActionListener {
        public void actionPerformed(final ActionEvent e) {
            final String email = textFieldUserEmail.getText();
            final String name = textFieldUserName.getText();
            final String sex = radioMale.isSelected() ? "男" : "女";
            final ArrayList<String> hobbies = RegisterDialog.this.getHobbiesInfo();

            if (email.isEmpty()) {
                JOptionPane.showMessageDialog(null, "请输入 Email", "提示", JOptionPane.PLAIN_MESSAGE);
                textFieldUserEmail.grabFocus();
                return;
            }

            if (!email.matches("[a-zA-Z0-9_+\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9]{2,4}")) {
                JOptionPane.showMessageDialog(null, "Email 格式有误", "提示", JOptionPane.PLAIN_MESSAGE);
                textFieldUserEmail.setText("");
                textFieldUserEmail.grabFocus();
                return;
            }

            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(null, "请填写用户名", "提示", JOptionPane.PLAIN_MESSAGE);
                textFieldUserName.grabFocus();
                return;
            }

            if (userDao.selectByEmail(email) != null) {
                JOptionPane.showMessageDialog(null, "该邮箱已存在", "提示", JOptionPane.PLAIN_MESSAGE);
                textFieldUserEmail.setText("");
                textFieldUserEmail.grabFocus();
                return;
            }

            userDao.insert(new User(email, name, sex, hobbies));

            RegisterDialog.this.resetForm();
        }
    }

    private class ButtonExitHandler implements ActionListener {
        public void actionPerformed(final ActionEvent e) {
            RegisterDialog.this.dispose();
        }
    }

    public RegisterDialog(final JFrame parent, final String msg, final UserDao userDao, final User user) {
        this(parent, msg, userDao);

        textFieldUserEmail.setEditable(false);
        textFieldUserEmail.setText(user.getEmail());

        textFieldUserName.setText(user.getUserName());

        panelButtons.remove(buttonSave);
        panelButtons.add(buttonModify);
        panelButtons.add(buttonExit);

        if (user.getSex().equals("男")) {
            radioMale.setSelected(true);
        } else {
            radioFemale.setSelected(true);
        }

        final ArrayList<String> hobbies = user.getHobbies();
        for (int i = 0; i < labelHobbies.length; ++i) {
            if (hobbies.contains(labelHobbies[i].getText())) {
                checkBoxHobbies[i].setSelected(true);
            }
        }

        buttonModify.addActionListener(new ButtonModifyHandler());

        this.validate();
    }

    private class ButtonModifyHandler implements ActionListener {
        public void actionPerformed(final ActionEvent e) {
            final String email = textFieldUserEmail.getText();
            final String name = textFieldUserName.getText();
            final String sex = radioMale.isSelected() ? "男" : "女";
            final ArrayList<String> hobbies = RegisterDialog.this.getHobbiesInfo();

            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(null, "请填写用户名", "提示", JOptionPane.PLAIN_MESSAGE);
                textFieldUserName.grabFocus();
                return;
            }

            userDao.update(new User(email, name, sex, hobbies));

            RegisterDialog.this.resetForm();
        }
    }
}
