package ums.gui;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import java.io.IOException;

import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JToolBar;
import javax.swing.KeyStroke;

import ums.dao.UserDao;
import ums.dao.impl.UserDaoImplForList;
import ums.entity.User;

public class Menu extends JFrame {
    /**
     * Generated by VSCode
     */
    private static final long serialVersionUID = 1680104006446667680L;

    private final JMenuItem jmiRegiste = new JMenuItem("注册用户");
    private final JMenuItem jmiModify = new JMenuItem("修改用户信息(M)", 'M');
    private final JMenuItem jmiSearchByEmail = new JMenuItem("按email查询(N)", 'N');
    private final JMenuItem jmiRemove = new JMenuItem("删除用户信息(R)", 'R');
    private final JMenuItem jmiAddright = new JMenuItem("增加权限(N)", 'N');
    private final JMenuItem jmiRemoveRight = new JMenuItem("删除权限(R)", 'R');
    private final JMenuItem jmiAssignright = new JMenuItem("为用户分配权限(A)", 'A');
    private final JMenuItem jmiSearchAll = new JMenuItem("浏览所有用户(H)", 'H');

    private final JButton btnRegiste = new JButton("", new ImageIcon(this.getClass().getResource("../ico/add.gif")));
    private final JButton btnEdit = new JButton("", new ImageIcon(this.getClass().getResource("../ico/modify.gif")));
    private final JButton btnRemove = new JButton("", new ImageIcon(this.getClass().getResource("../ico/remove.gif")));
    private final JButton btnSearch = new JButton("", new ImageIcon(this.getClass().getResource("../ico/search.gif")));

    private final UserDao userDao;

    public static void main(final String[] args) throws IOException {
        new Menu().setVisible(true);
    }

    public Menu() {
        this.userDao = new UserDaoImplForList();

        initMenuBar();
        initToolBar();

        final JPanel panel = new JPanel();
        panel.setPreferredSize(new Dimension(800, 400));
        this.add(panel, BorderLayout.CENTER);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        this.setTitle("用户管理系统");
        this.setBounds(300, 200, 800, 400);
        this.pack();

        this.validate();
    }

    private void initMenuBar() {
        final JMenu registeMenu = new JMenu("注册(N)");
        registeMenu.setMnemonic(KeyEvent.VK_N);
        jmiRegiste.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));
        registeMenu.add(jmiRegiste);

        final JMenu editMenu = new JMenu("编辑用户信息(E)");
        editMenu.setMnemonic(KeyEvent.VK_E);
        editMenu.add(jmiModify);
        editMenu.add(jmiRemove);

        final JMenu searchMenu = new JMenu("查询用户信息(S)");
        searchMenu.setMnemonic(KeyEvent.VK_S);
        searchMenu.add(jmiSearchByEmail);
        searchMenu.add(jmiSearchAll);

        final JMenu rightMenu = new JMenu("权限管理(L)");
        rightMenu.setMnemonic(KeyEvent.VK_L);
        rightMenu.add(jmiAddright);
        rightMenu.add(jmiRemoveRight);
        rightMenu.add(jmiAssignright);

        final JMenuBar menuBar = new JMenuBar();
        menuBar.add(registeMenu);
        menuBar.add(editMenu);
        menuBar.add(searchMenu);
        menuBar.add(rightMenu);

        this.setJMenuBar(menuBar);

        jmiRegiste.addActionListener(new RegisteHandler());
        jmiModify.addActionListener(new ModifyHandler());
        jmiRemove.addActionListener(new RemoveHandler());
        jmiSearchByEmail.addActionListener(new SearchByEmailHandler());
        jmiSearchAll.addActionListener(new SearchAllHandler());
    }

    private void initToolBar() {
        btnRegiste.setToolTipText("注册用户");
        btnEdit.setToolTipText("修改用户信息");
        btnRemove.setToolTipText("删除用户信息");
        btnSearch.setToolTipText("浏览所有用户");

        final JToolBar toolBar = new JToolBar();
        toolBar.add(btnRegiste);
        toolBar.add(btnEdit);
        toolBar.add(btnRemove);
        toolBar.add(btnSearch);

        btnRegiste.addActionListener(new RegisteHandler());
        btnEdit.addActionListener(new ModifyHandler());
        btnRemove.addActionListener(new RemoveHandler());
        btnSearch.addActionListener(new SearchAllHandler());

        this.add(toolBar, BorderLayout.NORTH);
    }

    private class RegisteHandler implements ActionListener {
        public void actionPerformed(final ActionEvent events) {
            new RegisterDialog(Menu.this, "注册用户", userDao).setVisible(true);
        }
    }

    private class ModifyHandler implements ActionListener {
        public void actionPerformed(final ActionEvent events) {
            new ModifyDialog(Menu.this, "修改用户信息", userDao).setVisible(true);
        }
    }

    private class RemoveHandler implements ActionListener {
        public void actionPerformed(final ActionEvent events) {
            new DeleteDialog(Menu.this, "删除用户信息", userDao).setVisible(true);
        }
    }

    private class SearchByEmailHandler implements ActionListener {
        public void actionPerformed(final ActionEvent events) {
            new SearchDialog(Menu.this, "按 Email 查询", userDao).setVisible(true);
        }
    }

    private class SearchAllHandler implements ActionListener {
        public void actionPerformed(final ActionEvent e) {
            final List<User> users = userDao.selectAll();
            if (users.isEmpty()) {
                JOptionPane.showMessageDialog(null, "没有用户的信息", "提示", JOptionPane.PLAIN_MESSAGE);
                return;
            }
            new ShowDataTableDialog(Menu.this, "查询结果", users).setVisible(true);
        }
    }
}