package ums.gui;

import java.awt.Panel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import ums.dao.UserDao;
import ums.entity.User;

public class SearchDialog extends JDialog {
	/**
	 * Generated by VSCode
	 */
	private static final long serialVersionUID = 8595408149994475854L;

	private UserDao userDao;

	private JLabel labelName = new JLabel("Email");
	private JTextField userEmail = new JTextField(20);
	private JButton buttonSearch = new JButton("查询");

	private int windowHeight = 120;
	private int windowWidth = 400;

	public SearchDialog(JFrame parent, String msg, UserDao userDao) {
		super(parent, msg, true);
		this.userDao = userDao;
	}

	public void showMe(JFrame parent) {
		Panel pSouth = new Panel();
		pSouth.add(buttonSearch);

		Panel pCenter = new Panel();
		pCenter.add(labelName);
		pCenter.add(userEmail);
		pCenter.add(pSouth);

		addEventHandler(parent);

		add(pCenter);

		setPosition(parent);
		setVisible(true);
		validate();
		setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
	}

	private void setPosition(JFrame parent) {
		// 计算对话框的显示位置
		int parentX = parent.getX();
		int parentY = parent.getY();
		int parentWidth = parent.getWidth();
		int parentHeight = parent.getHeight();
		int dialogX = parentX + (parentWidth - windowWidth) / 2;
		int dialogY = parentY + (parentHeight - windowHeight) / 2 + 40;
		this.setBounds(dialogX, dialogY, windowWidth, windowHeight);
	}

	public void addEventHandler(JFrame parent) {
		buttonSearch.addActionListener(new ButtonSearchByEmailHandler(parent));
	}

	private class ButtonSearchByEmailHandler implements ActionListener { // 按 email 查询用户
		private JFrame parent;

		public ButtonSearchByEmailHandler(JFrame parent) {
			this.parent = parent;
		}

		public void actionPerformed(ActionEvent e) {
			if (userEmail.getText() == null || userEmail.getText().length() == 0) {
				JOptionPane.showMessageDialog(null, "请输入要查询用户的email", "提示", JOptionPane.PLAIN_MESSAGE);
				return;
			}

			User user = userDao.selectByEmail(userEmail.getText());

			if (user == null) {
				JOptionPane.showMessageDialog(null, "该用户不存在", "提示", JOptionPane.PLAIN_MESSAGE);
				return;
			}

			List<User> resList = new ArrayList<User>();
			resList.add(user);
			new ShowDataTableDialog(parent, "查询结果", resList).showMe(parent);
		}
	}
}
